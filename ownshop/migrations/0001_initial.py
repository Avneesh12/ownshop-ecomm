# Generated by Django 4.0.2 on 2022-08-25 08:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('msg_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('email', models.CharField(default='', max_length=200)),
                ('phone', models.CharField(default='', max_length=200)),
                ('desc', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cus_id', models.AutoField(primary_key=True, serialize=False)),
                ('cus_name', models.CharField(default='', max_length=100)),
                ('cus_email', models.CharField(default='', max_length=200)),
                ('cus_password', models.CharField(default='', max_length=50)),
                ('cus_phone', models.CharField(default='', max_length=20)),
                ('cus_address', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('items_json', models.CharField(default='', max_length=5000)),
                ('amount', models.IntegerField(default=0)),
                ('email', models.CharField(default='', max_length=100)),
                ('name', models.CharField(default='', max_length=100)),
                ('address', models.CharField(default='', max_length=1000)),
                ('city', models.CharField(default='', max_length=500)),
                ('state', models.CharField(default='', max_length=500)),
                ('zip_code', models.CharField(default='', max_length=100)),
                ('mobile', models.CharField(default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='', max_length=100)),
                ('desc', models.CharField(default='', max_length=800)),
                ('product_catagory', models.CharField(default='', max_length=200)),
                ('product_price', models.FloatField(default=0)),
                ('image', models.ImageField(default='', upload_to='app/images')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=40)),
                ('mobile', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=40)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
